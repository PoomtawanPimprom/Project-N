generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  name      String
  username  String
  password  String
  email     String
  mobile    Int
  birthdate DateTime
  profile   String
  saler     Boolean

  //fk
  genderId Int
  gender   Gender @relation(fields: [genderId], references: [id])

  roleId Int
  role   Role @relation(fields: [roleId], references: [id])

  userStatusId Int
  userStatus   UserStatus @relation(fields: [userStatusId], references: [id])

  userAddressId Int
  UserAddress   UserAddress @relation(fields: [userAddressId], references: [id])
}

model Gender {
  id   Int    @id @default(autoincrement())
  name String
  User User[]
}

model Role {
  id   Int    @id @default(autoincrement())
  name String
  User User[]
}

model UserStatus {
  id   Int    @id @default(autoincrement())
  name String
  User User[]
}

model UserAddress {
  id          Int    @id @default(autoincrement())
  firstName   String
  lastName    String
  houseNo     String
  moo         String
  province    String
  district    String
  subDistrict String
  postalCode  Int
  mobile      Int

  User User[]
}

//----------------------------------------------------------------------------------------------

//Store sytem
model Store {
  id             Int         @id @default(autoincrement())
  name           String
  imageLogo      String?
  imageBackgroud String?
  scores         Float       @default(0)
  productTotal   Int         @default(0)
  follow         Int         @default(0)
  follower       Int         @default(0)
  createdAt      DateTime    @default(now())
  updatedAt      DateTime?   @updatedAt
  userId         Int?
  storeStatusId  Int         @default(1)
  StoreStatus    StoreStatus @relation(fields: [storeStatusId], references: [id])
  Product        Product[]
}

model StoreStatus {
  id    Int     @id @default(autoincrement())
  name  String  @unique
  store Store[]
}

//----------------------------------------------------------------------------------------------

model Product {
  id              Int           @id @default(autoincrement())
  name            String
  description     String
  price           Int
  //fk 
  storeID         Int
  store           Store         @relation(fields: [storeID], references: [id])
  categoryID      Int
  category        Category      @relation(fields: [categoryID], references: [id])
  // discountID       Int
  // discount         Discount    @relation(fields: [discountID], references: [id])
  productStatusID Int           @default(1)
  productStatus   ProductStatus @relation(fields: [productStatusID], references: [id])

  productInventory ProductInventory[]
}

model ProductInventory {
  id        Int     @id @default(autoincrement())
  quantity  Int
  size      String
  color     String?
  productID Int
  product   Product @relation(fields: [productID], references: [id])
}

model Category {
  id      Int       @id @default(autoincrement())
  name    String
  Product Product[]
}

model Discount {
  id               Int     @id @default(autoincrement())
  name             String
  desciption       String
  discount_persent Float
  disconnt_value   Int
  priceMinimum     Int
  active           Boolean
}

model ProductStatus {
  id      Int       @id @default(autoincrement())
  name    String
  product Product[]
}
